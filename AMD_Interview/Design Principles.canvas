{
	"nodes":[
		{"id":"0cb72bc16a9581f7","type":"text","text":"Factory Pattern\nEnables the creation of various profile types based on specific parameters or configurations. This is particularly useful for supporting different GPU architectures or application needs.","x":140,"y":-80,"width":416,"height":177,"color":"4"},
		{"id":"67c0711f18b24968","type":"text","text":"Strategy Pattern\n Allows the selection of the best profiling strategy based on application needs. This adaptability is essential when dealing with varying workloads and requirements.","x":-745,"y":72,"width":400,"height":140,"color":"3"},
		{"id":"3cc120adb61e3cf4","type":"text","text":"Exception handling patterns\n Ensures that GPU computations, which can be complex and error-prone, are handled gracefully. Robust exception handling is crucial for a reliable profiling tool.","x":-748,"y":-108,"width":403,"height":142},
		{"id":"71dde0fb812b0d3e","type":"text","text":"Dependency Injection\nDecouples components of the profiling system, making it easier to test and update individual parts without affecting the overall functionality.","x":-726,"y":-270,"width":363,"height":134,"color":"4"},
		{"id":"2cf4194a3c469a6f","type":"text","text":"Command Pattern\nEncapsulates actions like starting a profile or collecting data into objects, making it easier to manage and log operations, which is crucial for maintaining the integrity of profiling data.","x":100,"y":136,"width":410,"height":184,"color":"3"},
		{"id":"087b7d6d31ed391d","type":"text","text":"GO THROUGH EACH OF THESE TOPICS","x":-244,"y":-26,"width":276,"height":98,"color":"4"},
		{"id":"b793f371274251f4","type":"text","text":"Requires efficient data collection, storage and visualization","x":-245,"y":136,"width":279,"height":96},
		{"id":"32e5052e2d1f0492","type":"text","text":"TODO: ADD SUBCLASS FOR SINGLETON","x":510,"y":-529,"width":250,"height":60},
		{"id":"18b5a688fdd2cfc8","type":"text","text":"Singleton Pattern\n Creates a global instance of a profile to manage data collection efficiently across application components. This ensures that performance metrics are tracked without overloading the system.\n","x":288,"y":-370,"width":444,"height":190,"color":"4"},
		{"id":"73ca4045a624403e","type":"text","text":"Concurrency Control Pattern:\nEnsures that data access across threads is safe using mechanisms like locks or semaphores, crucial for managing GPU tasks handled simultaneously.\n\n","x":-783,"y":-488,"width":420,"height":168,"color":"3"},
		{"id":"abaa8dca323267fc","type":"text","text":"1. IS it DLL?\n\t1. No, but it is similar to design pattern which we did in Xilshark\n\t2. There were three different logging classes Console, Text and Wireshark (PCAP) ext which is inherited from Logger Abstraction(Virtual func)\n\t3. During initialization we read the ini config and then we set the respective Logger object.","x":-1180,"y":-429,"width":360,"height":349,"color":"4"},
		{"id":"d2893baffd09449e","type":"text","text":"TODO:\n1. Try conceptualizing with an example and try to write as a code.","x":556,"y":165,"width":289,"height":155},
		{"id":"ee1a42e38c718eb0","type":"text","text":"Design Principles","x":-205,"y":-164,"width":198,"height":56},
		{"id":"03d438343b5e4b10","type":"text","text":"Eventhough i have an example, let's think of a small example for interview","x":580,"y":-80,"width":287,"height":126,"color":"3"},
		{"id":"e711a6801551414f","type":"text","text":"TODO: draw class diagram","x":-218,"y":-589,"width":250,"height":60,"color":"3"},
		{"id":"b718626626ac3b36","type":"text","text":"https://chatgpt.com/share/67e2c4f9-8c1c-8011-94d0-acdd38527839","x":-860,"y":-720,"width":365,"height":120},
		{"id":"d1e5bc2f53445522","type":"text","text":"Observer Pattern\nAllows multiple components to monitor GPU performance in real-time. This flexibility and scalability make it ideal for systems where different parts need to track metrics independently.\n","x":-245,"y":-449,"width":453,"height":159,"color":"4"}
	],
	"edges":[
		{"id":"015b65147c20d982","fromNode":"ee1a42e38c718eb0","fromSide":"top","toNode":"d1e5bc2f53445522","toSide":"bottom"},
		{"id":"cb8167ed81928f0d","fromNode":"ee1a42e38c718eb0","fromSide":"right","toNode":"18b5a688fdd2cfc8","toSide":"bottom"},
		{"id":"ab005145626e3a47","fromNode":"ee1a42e38c718eb0","fromSide":"right","toNode":"0cb72bc16a9581f7","toSide":"left"},
		{"id":"5572b7fcf870b110","fromNode":"ee1a42e38c718eb0","fromSide":"bottom","toNode":"2cf4194a3c469a6f","toSide":"top"},
		{"id":"9f8322a32db676e8","fromNode":"67c0711f18b24968","fromSide":"right","toNode":"ee1a42e38c718eb0","toSide":"left"},
		{"id":"0a9b7a04ef7d46b5","fromNode":"3cc120adb61e3cf4","fromSide":"right","toNode":"ee1a42e38c718eb0","toSide":"left"},
		{"id":"d780bf770d03d92b","fromNode":"71dde0fb812b0d3e","fromSide":"right","toNode":"ee1a42e38c718eb0","toSide":"left"},
		{"id":"0e78683c987dd9cb","fromNode":"73ca4045a624403e","fromSide":"right","toNode":"ee1a42e38c718eb0","toSide":"left"},
		{"id":"7481de287140d360","fromNode":"ee1a42e38c718eb0","fromSide":"bottom","toNode":"087b7d6d31ed391d","toSide":"top"},
		{"id":"8d3ae22db108c52a","fromNode":"b793f371274251f4","fromSide":"top","toNode":"087b7d6d31ed391d","toSide":"bottom"},
		{"id":"9dfb3aee891d2938","fromNode":"18b5a688fdd2cfc8","fromSide":"top","toNode":"32e5052e2d1f0492","toSide":"bottom"},
		{"id":"839cab35a61cdc35","fromNode":"abaa8dca323267fc","fromSide":"right","toNode":"71dde0fb812b0d3e","toSide":"left"},
		{"id":"59991c5ad284344b","fromNode":"2cf4194a3c469a6f","fromSide":"right","toNode":"d2893baffd09449e","toSide":"left"},
		{"id":"adeb98eb2d65744d","fromNode":"0cb72bc16a9581f7","fromSide":"right","toNode":"03d438343b5e4b10","toSide":"left"},
		{"id":"a2d6d920084b60bf","fromNode":"d1e5bc2f53445522","fromSide":"top","toNode":"e711a6801551414f","toSide":"bottom"},
		{"id":"e3f44f065c7372a1","fromNode":"73ca4045a624403e","fromSide":"top","toNode":"b718626626ac3b36","toSide":"bottom"}
	]
}